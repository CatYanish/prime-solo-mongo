
////Create a collection named orders.


            db.createCollection('orders')


//Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields. Order dates should be: 2017-02-03, 2017-04-04, 2017-01-02///


            orders.insert({
            orderDate: new Date('2017-02-03'),
            orderTotal: 75.00,
            lineItems: [ {unitPrice: 25.00 }, 
                        {quantity: 3 },
                        {productName: 'miniature freshwater sharks' }   
            ]})



            orders.insert({
            orderDate: new Date('2017-04-04'),
            orderTotal: 27500.00, 
            lineItems: [ {unitPrice: 27500.00 },
                          {quantity: 1 },
                          {productName: 'Abstract Painting titled "Blue", mixed media in all purple' } 
            ]})


            orders.insert({
            orderDate: new Date('2017-01-02'),
            orderTotal: 500.00,
            lineItems: [ ]  })
            

//Find all orders and make them look pretty.

            orders.find().pretty()


//Find all orders with an orderDate that is after 1/31/2017.

            orders.find({orderDate: {$gt: new Date('2017-01-31')}}).pretty()



//Change the orderTotal from 2/3/2017 to 63 dollars (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)

            orders.update({orderDate: new Date('2017-02-03')},{$set:{ orderTotal: '63 dollars'}}) 


//Add another lineItem to the order from 4/4/2017

            orders.update({orderDate: new Date('2017-04-04')},
            {$push: {lineItems: {unitPrice: 450,quantity: 2, productName: 'Set of matching Qing Dynasty drinking vessels from                   Gansu province'}} })

//Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's
            
            orders.update({orderDate: new Date('2017-01-02')},{$set: {"lineItems.1.quantity":2}  })
            orders.update({orderDate: new Date('2017-01-02')},{$set: {"lineItems.2.productName":"transistor radio"}  })




//Find orders with lineItems that have a quantity that is less than 10, but greater than 2. You will have to research $and
            
            orders.find({$and: [{"lineItems.quantity": {$lt:10}}, {"lineItems.quantity": {$gt:2}}] })
